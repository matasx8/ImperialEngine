#version 450

#extension GL_EXT_shader_16bit_storage: require
#extension GL_EXT_shader_8bit_storage: require
#extension GL_NV_mesh_shader: require
#extension GL_GOOGLE_include_directive: require
#extension GL_ARB_shader_draw_parameters: require
#extension GL_EXT_nonuniform_qualifier : require

//#include "prefix.h"
#include "DescriptorSet0.h"
#include "DescriptorSet1.h"

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

out taskNV block
{
	uint meshletOffset;
};

void main()
{
	uint ti = gl_LocalInvocationID.x;
	uint mgi = gl_WorkGroupID.x;
	//uint mi = gl_WorkGroupID.x;
	uint mi = mgi * 32 + ti;


	if (ti == 0)
	{
		uint drawDataIndex = drawDataIndices[gl_DrawIDARB];
		uint taskCount = min(32, drawData[drawDataIndex].taskCount - gl_WorkGroupID.x * 32);

		meshletOffset = mi;
		gl_TaskCountNV = taskCount;
	}
}